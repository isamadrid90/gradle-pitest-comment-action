name: 'Gradle Pitest with summary comment'
description: 'Action to execute pitest in a project with gradle and leave a comment with the summary of the execution'
inputs:
  repo-token:
    description: 'Repository secret'
    required: true
  reports-retention:
    description: 'Amount of days to retain the reports as artifact'
    required: false
    default: "1"
  reports-path:
    description: 'The path where the pitest reports are generated'
    required: false
    default: "build/reports/pitest"
  working-directory:
    description: 'The directory where gradle can be executed'
    required: false
    default: .
runs:
  using: "composite"
  steps:
    - name: Grant execute permission for gradlew
      working-directory: ${{ inputs.working-directory }}
      run: chmod +x gradlew
      shell: bash

    - name: Build with Gradle
      run: ./gradlew clean assemble
      working-directory: ${{ inputs.working-directory }}
      shell: bash

    - name: Execute PITest
      working-directory: ${{ inputs.working-directory }}
      run: |
        MUTATION_TEST=$(./gradlew pitest)     
        SUMMARY=${MUTATION_TEST##*=}
        echo 'summary_mutation<<EOF' >> $GITHUB_ENV  
        echo ${SUMMARY%%B*} | sed '/- Statistics/,/Enhanced functionality available at https:\/\/www\.arcmutate\.com\//p' | sed '$d' >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
      id: mutation-test-execution
      shell: bash

    - name: Upload report
      uses: actions/upload-artifact@v3
      with:
        name: reports-artifact
        path: ${{ inputs.reports-path }}
        retention-days: ${{ inputs.reports-retention }}

    - name: Get Artifact URL
      id: artifact-url
      shell: bash
      run: |
        echo "artifact_url=$(curl -s -H \"Authorization:Bearer ${{ inputs.repo-token }}\" -X POST -H \"Accept: application/vnd.github.v3+json\" https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts | jq -r '.artifacts[0].archive_download_url')" >> $GITHUB_OUTPUT

    - name: Comment on Pull Request
      uses: actions/github-script@v7
      with:
        script: |
          // const artifactUrl = steps.artifact-url.outputs.artifact_url;
          const prNumber = github.event.pull_request.number;
          const repoOwner = context.repo.owner;
          const repoName = context.repo.repo;
          const message = '${{ env.summary_mutation }}'
          
          const commentMessage = "Thank you for your pull request! ðŸš€";
          
          // Post comment
          await github.rest.issues.createComment({
            owner: repoOwner,
            repo: repoName,
            issue_number: prNumber,
            body: commentMessage,
          });
          


#          await octokit.rest.issues.createComment({
#            owner: repoOwner,
#            repo: repoName,
#            issue_number: prNumber,
#            body: message
#          });

